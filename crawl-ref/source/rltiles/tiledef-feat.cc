// This file has been automatically generated.

#include "AppHdr.h"
#include "tiledef-feat.h"

static unsigned int _tile_feat_count[TILE_FEAT_MAX - TILE_WALL_MAX] =
{
    21,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    3,
    1,
    1,
    2,
    1,
    4,
    1,
    1,
    1,
    2,
    1,
    3,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
    1,
    1,
    1,
    25,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    6,
    1,
    1,
    1,
    1,
    1,
    1,
    3,
    1,
    1,
    1,
    1,
    1,
    2,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    5,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    3,
    1,
    1,
    1,
    1,
    3,
    1,
    1,
    3,
    1,
    1,
    3,
    1,
    1,
    3,
    1,
    1,
    1,
    3,
    1,
    1,
    2,
    1,
    1,
    1,
    2,
    1,
    1,
    1,
    1,
    2,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
    1,
    1,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    5,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    11,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    3,
    1,
    1,
    3,
    1,
    1,
    3,
    1,
    1,
    1,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    1,
    1,
    1,
    30,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    18,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    18,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    18,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    18,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    10,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    2,
    1,
    1,
    4,
    1,
    1,
    1,
    1,
    3,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
};

unsigned int tile_feat_count(tileidx_t idx)
{
    ASSERT_RANGE(idx, TILE_WALL_MAX, TILE_FEAT_MAX);
    return _tile_feat_count[idx - TILE_WALL_MAX];
}

static tileidx_t _tile_feat_basetiles[TILE_FEAT_MAX - TILE_WALL_MAX] =
{
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    21,
    21,
    21,
    24,
    24,
    26,
    26,
    26,
    26,
    30,
    30,
    32,
    32,
    32,
    35,
    36,
    37,
    38,
    39,
    40,
    41,
    42,
    43,
    44,
    45,
    46,
    47,
    48,
    49,
    50,
    51,
    52,
    53,
    54,
    55,
    56,
    57,
    58,
    59,
    60,
    61,
    62,
    63,
    64,
    65,
    66,
    67,
    68,
    69,
    70,
    71,
    72,
    73,
    74,
    75,
    76,
    77,
    77,
    79,
    80,
    81,
    81,
    81,
    81,
    81,
    81,
    81,
    81,
    81,
    81,
    81,
    81,
    81,
    81,
    81,
    81,
    81,
    81,
    81,
    81,
    81,
    81,
    81,
    81,
    81,
    106,
    106,
    106,
    106,
    106,
    106,
    112,
    113,
    113,
    113,
    116,
    117,
    118,
    119,
    119,
    121,
    122,
    123,
    124,
    125,
    126,
    127,
    128,
    129,
    130,
    131,
    132,
    133,
    134,
    135,
    136,
    137,
    138,
    139,
    140,
    141,
    142,
    143,
    144,
    145,
    145,
    145,
    145,
    145,
    150,
    151,
    152,
    153,
    154,
    155,
    156,
    157,
    158,
    159,
    160,
    161,
    162,
    163,
    164,
    165,
    166,
    167,
    168,
    169,
    170,
    171,
    172,
    173,
    174,
    175,
    176,
    177,
    178,
    179,
    180,
    181,
    182,
    183,
    184,
    185,
    186,
    187,
    188,
    189,
    190,
    191,
    192,
    193,
    194,
    195,
    196,
    197,
    198,
    199,
    200,
    201,
    202,
    203,
    204,
    205,
    206,
    207,
    208,
    209,
    210,
    211,
    212,
    213,
    214,
    215,
    216,
    217,
    217,
    217,
    220,
    221,
    222,
    222,
    222,
    225,
    225,
    225,
    228,
    228,
    228,
    231,
    231,
    231,
    234,
    235,
    235,
    235,
    238,
    238,
    240,
    241,
    242,
    242,
    244,
    245,
    246,
    247,
    247,
    249,
    250,
    251,
    252,
    253,
    254,
    255,
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    265,
    266,
    267,
    268,
    269,
    270,
    271,
    272,
    273,
    274,
    275,
    276,
    277,
    278,
    279,
    280,
    281,
    282,
    283,
    284,
    284,
    284,
    284,
    284,
    284,
    284,
    284,
    292,
    292,
    294,
    295,
    295,
    295,
    295,
    295,
    295,
    295,
    295,
    303,
    304,
    305,
    305,
    305,
    305,
    305,
    310,
    311,
    312,
    313,
    313,
    313,
    313,
    313,
    313,
    313,
    313,
    313,
    313,
    313,
    324,
    325,
    326,
    327,
    327,
    327,
    330,
    330,
    330,
    333,
    333,
    333,
    336,
    337,
    338,
    338,
    340,
    340,
    342,
    342,
    344,
    345,
    346,
    347,
    347,
    347,
    347,
    347,
    347,
    347,
    347,
    347,
    347,
    347,
    347,
    347,
    347,
    347,
    347,
    347,
    347,
    347,
    347,
    347,
    347,
    347,
    347,
    347,
    347,
    347,
    347,
    347,
    347,
    377,
    377,
    377,
    377,
    377,
    377,
    377,
    377,
    377,
    377,
    377,
    377,
    377,
    377,
    377,
    377,
    377,
    377,
    395,
    395,
    395,
    395,
    395,
    395,
    395,
    395,
    395,
    395,
    395,
    395,
    395,
    395,
    395,
    395,
    395,
    395,
    413,
    413,
    413,
    413,
    413,
    413,
    413,
    413,
    413,
    413,
    413,
    413,
    413,
    413,
    413,
    413,
    413,
    413,
    431,
    431,
    431,
    431,
    431,
    431,
    431,
    431,
    431,
    431,
    431,
    431,
    431,
    431,
    431,
    431,
    431,
    431,
    449,
    449,
    449,
    449,
    449,
    449,
    449,
    449,
    449,
    449,
    459,
    460,
    461,
    461,
    461,
    461,
    465,
    465,
    467,
    468,
    468,
    468,
    468,
    472,
    473,
    473,
    473,
    476,
    477,
    478,
    479,
    480,
    481,
    482,
    482,
    482,
    482,
    486,
    486,
    486,
    486,
    490,
    491,
    492,
    493,
    494,
    495,
    496,
    497,
    498,
    499,
    500,
    501,
    502,
    503,
    504,
    505,
    506,
};

tileidx_t tile_feat_basetile(tileidx_t idx)
{
    ASSERT_RANGE(idx, TILE_WALL_MAX, TILE_FEAT_MAX);
    return _tile_feat_basetiles[idx - TILE_WALL_MAX] + TILE_WALL_MAX;
}

static int _tile_feat_probs[TILE_FEAT_MAX - TILE_WALL_MAX] =
{
    10,
    20,
    30,
    40,
    50,
    52,
    54,
    64,
    74,
    80,
    90,
    100,
    103,
    110,
    112,
    114,
    116,
    118,
    122,
    126,
    130,
    10,
    20,
    22,
    10,
    20,
    10,
    20,
    30,
    40,
    10,
    20,
    10,
    18,
    23,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    10,
    5,
    5,
    5,
    10,
    15,
    20,
    25,
    30,
    35,
    43,
    51,
    59,
    67,
    70,
    73,
    76,
    79,
    82,
    85,
    88,
    91,
    94,
    97,
    98,
    99,
    100,
    101,
    1,
    2,
    3,
    4,
    5,
    6,
    1,
    1,
    2,
    3,
    1,
    1,
    1,
    1,
    2,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
    3,
    4,
    5,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
    3,
    1,
    1,
    1,
    2,
    3,
    1,
    2,
    3,
    1,
    2,
    3,
    1,
    2,
    3,
    1,
    1,
    2,
    3,
    1,
    2,
    1,
    1,
    1,
    2,
    1,
    1,
    1,
    1,
    2,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    1,
    2,
    1,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    1,
    1,
    1,
    2,
    3,
    4,
    5,
    1,
    1,
    1,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    1,
    1,
    1,
    1,
    2,
    3,
    1,
    2,
    3,
    1,
    2,
    3,
    1,
    1,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    1,
    1,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14,
    15,
    16,
    17,
    18,
    19,
    20,
    21,
    22,
    23,
    24,
    25,
    26,
    27,
    28,
    29,
    30,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14,
    15,
    16,
    17,
    18,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14,
    15,
    16,
    17,
    18,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14,
    15,
    16,
    17,
    18,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14,
    15,
    16,
    17,
    18,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    1,
    1,
    1,
    2,
    3,
    4,
    1,
    2,
    1,
    1,
    2,
    3,
    4,
    1,
    1,
    2,
    3,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
};

int tile_feat_probs(tileidx_t idx)
{
    ASSERT_RANGE(idx, TILE_WALL_MAX, TILE_FEAT_MAX);
    return _tile_feat_probs[idx - TILE_WALL_MAX];
}

static int _tile_feat_dominoes[TILE_FEAT_MAX - TILE_WALL_MAX] =
{
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
};

int tile_feat_dominoes(tileidx_t idx)
{
    ASSERT_RANGE(idx, TILE_WALL_MAX, TILE_FEAT_MAX);
    return _tile_feat_dominoes[idx - TILE_WALL_MAX];
}

static const char *_tile_feat_name[TILE_FEAT_MAX - TILE_WALL_MAX] =
{
    "DNGN_TREE",
    "DNGN_TREE_1",
    "DNGN_TREE_2",
    "DNGN_TREE_3",
    "DNGN_TREE_4",
    "DNGN_TREE_5",
    "DNGN_TREE_6",
    "DNGN_TREE_7",
    "DNGN_TREE_8",
    "DNGN_TREE_9",
    "DNGN_TREE_10",
    "DNGN_TREE_11",
    "DNGN_TREE_12",
    "DNGN_TREE_13",
    "DNGN_TREE_14",
    "DNGN_TREE_15",
    "DNGN_TREE_16",
    "DNGN_TREE_17",
    "DNGN_TREE_18",
    "DNGN_TREE_19",
    "DNGN_TREE_20",
    "DNGN_TREE_YELLOW",
    "DNGN_TREE_YELLOW_1",
    "DNGN_TREE_YELLOW_2",
    "DNGN_TREE_LIGHTRED",
    "DNGN_TREE_LIGHTRED_1",
    "DNGN_TREE_RED",
    "DNGN_TREE_RED_1",
    "DNGN_TREE_RED_2",
    "DNGN_TREE_RED_3",
    "DNGN_TREE_DEAD",
    "DNGN_TREE_DEAD_1",
    "DNGN_MANGROVE",
    "DNGN_MANGROVE_1",
    "DNGN_MANGROVE_2",
    "DNGN_CLOSED_DOOR",
    "DNGN_GATE_CLOSED_LEFT",
    "DNGN_GATE_CLOSED_MIDDLE",
    "DNGN_GATE_CLOSED_RIGHT",
    "DNGN_VGATE_CLOSED_UP",
    "DNGN_VGATE_CLOSED_MIDDLE",
    "DNGN_VGATE_CLOSED_DOWN",
    "DNGN_OPEN_DOOR",
    "DNGN_GATE_OPEN_LEFT",
    "DNGN_GATE_OPEN_MIDDLE",
    "DNGN_GATE_OPEN_RIGHT",
    "DNGN_VGATE_OPEN_UP",
    "DNGN_VGATE_OPEN_MIDDLE",
    "DNGN_VGATE_OPEN_DOWN",
    "DNGN_RUNED_DOOR",
    "DNGN_GATE_RUNED_LEFT",
    "DNGN_GATE_RUNED_MIDDLE",
    "DNGN_GATE_RUNED_RIGHT",
    "DNGN_VGATE_RUNED_UP",
    "DNGN_VGATE_RUNED_MIDDLE",
    "DNGN_VGATE_RUNED_DOWN",
    "DNGN_SEALED_DOOR",
    "DNGN_GATE_SEALED_LEFT",
    "DNGN_GATE_SEALED_MIDDLE",
    "DNGN_GATE_SEALED_RIGHT",
    "DNGN_VGATE_SEALED_UP",
    "DNGN_VGATE_SEALED_MIDDLE",
    "DNGN_VGATE_SEALED_DOWN",
    "DNGN_CLOSED_DOOR_CRYPT",
    "DNGN_GATE_CLOSED_LEFT_CRYPT",
    "DNGN_GATE_CLOSED_MIDDLE_CRYPT",
    "DNGN_GATE_CLOSED_RIGHT_CRYPT",
    "DNGN_VGATE_CLOSED_UP_CRYPT",
    "DNGN_VGATE_CLOSED_MIDDLE_CRYPT",
    "DNGN_VGATE_CLOSED_DOWN_CRYPT",
    "DNGN_OPEN_DOOR_CRYPT",
    "DNGN_GATE_OPEN_LEFT_CRYPT",
    "DNGN_GATE_OPEN_MIDDLE_CRYPT",
    "DNGN_GATE_OPEN_RIGHT_CRYPT",
    "DNGN_VGATE_OPEN_UP_CRYPT",
    "DNGN_VGATE_OPEN_MIDDLE_CRYPT",
    "DNGN_VGATE_OPEN_DOWN_CRYPT",
    "DNGN_FLESHY_ORIFICE",
    "DNGN_FLESHY_ORIFICE_1",
    "DNGN_STONE_ARCH",
    "DNGN_ORCISH_IDOL",
    "DNGN_GRANITE_STATUE",
    "DNGN_GRANITE_STATUE_1",
    "DNGN_GRANITE_STATUE_2",
    "DNGN_STATUE_CENTAUR",
    "DNGN_STATUE_SNAIL",
    "DNGN_STATUE_CAT",
    "DNGN_STATUE_CAT_1",
    "DNGN_STATUE_MERMAID",
    "DNGN_STATUE_NAGA",
    "DNGN_STATUE_DRAGON",
    "DNGN_STATUE_DRAGON_1",
    "DNGN_STATUE_ANGEL",
    "DNGN_STATUE_ELEPHANT",
    "DNGN_STATUE_WRAITH",
    "DNGN_STATUE_IMP",
    "DNGN_STATUE_IMP_1",
    "DNGN_STATUE_IMP_2",
    "DNGN_STATUE_DEMONIC_BUST",
    "DNGN_STATUE_DEMONIC_BUST_1",
    "DNGN_STATUE_DEMONIC_BUST_2",
    "DNGN_STATUE_DEMONIC_BUST_3",
    "DNGN_STATUE_DEMONIC_BUST_4",
    "DNGN_STATUE_ANCIENT_HERO",
    "DNGN_STATUE_ANCIENT_EVIL",
    "DNGN_STATUE_ANCIENT_EVIL_1",
    "DNGN_CRUMBLED_COLUMN",
    "DNGN_CRUMBLED_COLUMN_1",
    "DNGN_CRUMBLED_COLUMN_2",
    "DNGN_CRUMBLED_COLUMN_3",
    "DNGN_CRUMBLED_COLUMN_4",
    "DNGN_CRUMBLED_COLUMN_5",
    "DNGN_STATUE_IRON",
    "DNGN_GRAVESTONE",
    "DNGN_GRAVESTONE_1",
    "DNGN_GRAVESTONE_2",
    "DNGN_GRAVESTONE_ORNATE",
    "DNGN_MACHINE_TUKIMA",
    "DNGN_TELEPORTER_ICE_CAVE",
    "DNGN_GOLDEN_STATUE",
    "DNGN_GOLDEN_STATUE_1",
    "DNGN_SARCOPHAGUS_SEALED",
    "DNGN_SARCOPHAGUS_PEDESTAL_LEFT",
    "DNGN_SARCOPHAGUS_PEDESTAL_RIGHT",
    "DNGN_STATUE_ELEPHANT_JADE",
    "DNGN_STATUE_IRON_GOLEM",
    "DNGN_DIMENSION_EDGE",
    "DNGN_DISCO_BALL",
    "PLACEHOLDER1",
    "PLACEHOLDER2",
    "PLACEHOLDER3",
    "DNGN_TRAP_DART",
    "DNGN_TRAP_ARROW",
    "DNGN_TRAP_NEEDLE",
    "DNGN_TRAP_BOLT",
    "DNGN_TRAP_SPEAR",
    "DNGN_TRAP_BLADE",
    "DNGN_TRAP_NET",
    "DNGN_TRAP_ALARM",
    "DNGN_TRAP_SHAFT",
    "DNGN_TRAP_TELEPORT",
    "DNGN_TRAP_TELEPORT_PERMANENT",
    "DNGN_TRAP_ZOT",
    "DNGN_TRAP_GOLUBRIA",
    "DNGN_TRAP_PLATE",
    "DNGN_TRAP_WEB",
    "DNGN_TRAP_WEB_1",
    "DNGN_TRAP_WEB_2",
    "DNGN_TRAP_WEB_3",
    "DNGN_TRAP_WEB_4",
    "DNGN_TRAP_WEB_N",
    "DNGN_TRAP_WEB_E",
    "DNGN_TRAP_WEB_NE",
    "DNGN_TRAP_WEB_S",
    "DNGN_TRAP_WEB_NS",
    "DNGN_TRAP_WEB_ES",
    "DNGN_TRAP_WEB_NES",
    "DNGN_TRAP_WEB_W",
    "DNGN_TRAP_WEB_NW",
    "DNGN_TRAP_WEB_EW",
    "DNGN_TRAP_WEB_NEW",
    "DNGN_TRAP_WEB_SW",
    "DNGN_TRAP_WEB_NSW",
    "DNGN_TRAP_WEB_ESW",
    "DNGN_TRAP_WEB_NESW",
    "DNGN_EXIT_DUNGEON",
    "DNGN_STONE_STAIRS_DOWN",
    "DNGN_STONE_STAIRS_UP",
    "DNGN_ESCAPE_HATCH_DOWN",
    "DNGN_ESCAPE_HATCH_UP",
    "DNGN_SHOALS_STAIRS_DOWN",
    "DNGN_SHOALS_STAIRS_UP",
    "DNGN_ENTER",
    "DNGN_RETURN",
    "DNGN_SEALED_STAIRS_UP",
    "DNGN_SEALED_STAIRS_DOWN",
    "SHOP_GENERAL",
    "SHOP_WEAPONS",
    "SHOP_ARMOUR",
    "SHOP_FOOD",
    "SHOP_BOOKS",
    "SHOP_SCROLLS",
    "SHOP_WANDS",
    "SHOP_JEWELLERY",
    "SHOP_POTIONS",
    "SHOP_GADGETS",
    "DNGN_ABANDONED_SHOP",
    "DNGN_ENTER_ZOT_CLOSED",
    "DNGN_ENTER_ZOT_OPEN",
    "DNGN_RETURN_ZOT",
    "DNGN_ENTER_TEMPLE",
    "DNGN_EXIT_TEMPLE",
    "DNGN_ENTER_ORC",
    "DNGN_EXIT_ORC",
    "DNGN_ENTER_ELF",
    "DNGN_EXIT_ELF",
    "DNGN_ENTER_LAIR",
    "DNGN_EXIT_LAIR",
    "DNGN_ENTER_SNAKE",
    "DNGN_EXIT_SNAKE",
    "DNGN_ENTER_SWAMP",
    "DNGN_EXIT_SWAMP",
    "DNGN_ENTER_SPIDER",
    "DNGN_EXIT_SPIDER",
    "DNGN_ENTER_SHOALS",
    "DNGN_EXIT_SHOALS",
    "DNGN_ENTER_SLIME",
    "DNGN_EXIT_SLIME",
    "DNGN_ENTER_VAULTS_CLOSED",
    "DNGN_ENTER_VAULTS_OPEN",
    "DNGN_EXIT_VAULTS",
    "DNGN_ENTER_DEPTHS",
    "DNGN_RETURN_DEPTHS",
    "DNGN_ENTER_CRYPT",
    "DNGN_EXIT_CRYPT",
    "DNGN_ENTER_TOMB",
    "DNGN_EXIT_TOMB",
    "DNGN_ENTER_HELL",
    "DNGN_ENTER_HELL_1",
    "DNGN_ENTER_HELL_2",
    "DNGN_RETURN_VESTIBULE",
    "DNGN_STONE_ARCH_HELL",
    "DNGN_ENTER_DIS",
    "DNGN_ENTER_DIS_1",
    "DNGN_ENTER_DIS_2",
    "DNGN_ENTER_GEHENNA",
    "DNGN_ENTER_GEHENNA_1",
    "DNGN_ENTER_GEHENNA_2",
    "DNGN_ENTER_COCYTUS",
    "DNGN_ENTER_COCYTUS_1",
    "DNGN_ENTER_COCYTUS_2",
    "DNGN_ENTER_TARTARUS",
    "DNGN_ENTER_TARTARUS_1",
    "DNGN_ENTER_TARTARUS_2",
    "DNGN_RETURN_HELL",
    "DNGN_ENTER_ABYSS",
    "DNGN_ENTER_ABYSS_1",
    "DNGN_ENTER_ABYSS_2",
    "DNGN_EXIT_ABYSS",
    "DNGN_EXIT_ABYSS_1",
    "DNGN_ABYSSAL_STAIR",
    "DNGN_ENTER_PANDEMONIUM",
    "DNGN_PORTAL",
    "DNGN_PORTAL_1",
    "DNGN_PORTAL_EXPIRED",
    "DNGN_STARRY_PORTAL",
    "DNGN_TRANSIT_PANDEMONIUM",
    "DNGN_EXIT_PANDEMONIUM",
    "DNGN_EXIT_PANDEMONIUM_1",
    "DNGN_PORTAL_VOLCANO",
    "DNGN_PORTAL_VOLCANO_GONE",
    "DNGN_EXIT_VOLCANO",
    "DNGN_PORTAL_SEWER",
    "DNGN_PORTAL_SEWER_RUSTED",
    "DNGN_PORTAL_ICE_CAVE",
    "DNGN_PORTAL_ICE_CAVE_GONE",
    "DNGN_PORTAL_WIZARD_LAB",
    "DNGN_PORTAL_WIZARD_LAB_1",
    "DNGN_PORTAL_WIZARD_LAB_2",
    "DNGN_PORTAL_WIZARD_LAB_3",
    "DNGN_PORTAL_WIZARD_LAB_4",
    "DNGN_PORTAL_WIZARD_LAB_5",
    "DNGN_PORTAL_WIZARD_LAB_6",
    "DNGN_PORTAL_WIZARD_LAB_7",
    "DNGN_PORTAL_WIZARD_LAB_8",
    "DNGN_PORTAL_WIZLAB_GONE",
    "DNGN_PORTAL_OSSUARY",
    "DNGN_PORTAL_OSSUARY_GONE",
    "DNGN_PORTAL_BAILEY",
    "DNGN_PORTAL_BAILEY_GONE",
    "DNGN_PORTAL_LABYRINTH",
    "DNGN_PORTAL_LABYRINTH_GONE",
    "DNGN_PORTAL_TROVE",
    "DNGN_PORTAL_TROVE_GONE",
    "DNGN_PORTAL_BAZAAR",
    "DNGN_PORTAL_BAZAAR_GONE",
    "DNGN_PORTAL_ZIGGURAT",
    "DNGN_PORTAL_ZIGGURAT_GONE",
    "DNGN_UNKNOWN_PORTAL",
    "DNGN_UNSEEN_ALTAR",
    "DNGN_ALTAR_ZIN",
    "DNGN_ALTAR_SHINING_ONE",
    "DNGN_ALTAR_KIKUBAAQUDGHA",
    "DNGN_ALTAR_YREDELEMNUL",
    "DNGN_ALTAR_XOM",
    "DNGN_ALTAR_XOM_1",
    "DNGN_ALTAR_XOM_2",
    "DNGN_ALTAR_XOM_3",
    "DNGN_ALTAR_XOM_4",
    "DNGN_ALTAR_XOM_5",
    "DNGN_ALTAR_XOM_6",
    "DNGN_ALTAR_XOM_7",
    "DNGN_ALTAR_VEHUMET",
    "DNGN_ALTAR_VEHUMET_1",
    "DNGN_ALTAR_OKAWARU",
    "DNGN_ALTAR_MAKHLEB",
    "DNGN_ALTAR_MAKHLEB_1",
    "DNGN_ALTAR_MAKHLEB_2",
    "DNGN_ALTAR_MAKHLEB_3",
    "DNGN_ALTAR_MAKHLEB_4",
    "DNGN_ALTAR_MAKHLEB_5",
    "DNGN_ALTAR_MAKHLEB_6",
    "DNGN_ALTAR_MAKHLEB_7",
    "DNGN_ALTAR_SIF_MUNA",
    "DNGN_ALTAR_TROG",
    "DNGN_ALTAR_NEMELEX_XOBEH",
    "DNGN_ALTAR_NEMELEX_XOBEH_1",
    "DNGN_ALTAR_NEMELEX_XOBEH_2",
    "DNGN_ALTAR_NEMELEX_XOBEH_3",
    "DNGN_ALTAR_NEMELEX_XOBEH_4",
    "DNGN_ALTAR_ELYVILON",
    "DNGN_ALTAR_LUGONU",
    "DNGN_ALTAR_BEOGH",
    "DNGN_ALTAR_JIYVA",
    "DNGN_ALTAR_JIYVA_1",
    "DNGN_ALTAR_JIYVA_2",
    "DNGN_ALTAR_JIYVA_3",
    "DNGN_ALTAR_JIYVA_4",
    "DNGN_ALTAR_JIYVA_5",
    "DNGN_ALTAR_JIYVA_6",
    "DNGN_ALTAR_JIYVA_7",
    "DNGN_ALTAR_JIYVA_8",
    "DNGN_ALTAR_JIYVA_9",
    "DNGN_ALTAR_JIYVA_10",
    "DNGN_ALTAR_FEDHAS",
    "DNGN_ALTAR_CHEIBRIADOS",
    "DNGN_ALTAR_ASHENZARI",
    "DNGN_ALTAR_DITHMENOS",
    "DNGN_ALTAR_DITHMENOS_1",
    "DNGN_ALTAR_DITHMENOS_2",
    "DNGN_ALTAR_GOZAG",
    "DNGN_ALTAR_GOZAG_1",
    "DNGN_ALTAR_GOZAG_2",
    "DNGN_ALTAR_QAZLAL",
    "DNGN_ALTAR_QAZLAL_1",
    "DNGN_ALTAR_QAZLAL_2",
    "DNGN_ALTAR_RU",
    "DNGN_UNKNOWN_ALTAR",
    "DNGN_FOUNTAIN",
    "DNGN_FOUNTAIN_1",
    "DNGN_SPARKLING_FOUNTAIN",
    "DNGN_SPARKLING_FOUNTAIN_1",
    "DNGN_BLOOD_FOUNTAIN",
    "DNGN_BLOOD_FOUNTAIN_1",
    "DNGN_DRY_FOUNTAIN",
    "DNGN_DRY_FOUNTAIN_WHITE",
    "DNGN_TELEPORTER",
    "BLOOD",
    "BLOOD_1",
    "BLOOD_2",
    "BLOOD_3",
    "BLOOD_4",
    "BLOOD_5",
    "BLOOD_6",
    "BLOOD_7",
    "BLOOD_8",
    "BLOOD_9",
    "BLOOD_10",
    "BLOOD_11",
    "BLOOD_12",
    "BLOOD_13",
    "BLOOD_14",
    "BLOOD_15",
    "BLOOD_16",
    "BLOOD_17",
    "BLOOD_18",
    "BLOOD_19",
    "BLOOD_20",
    "BLOOD_21",
    "BLOOD_22",
    "BLOOD_23",
    "BLOOD_24",
    "BLOOD_25",
    "BLOOD_26",
    "BLOOD_27",
    "BLOOD_28",
    "BLOOD_29",
    "WALL_BLOOD_S",
    "WALL_BLOOD_S_1",
    "WALL_BLOOD_S_2",
    "WALL_BLOOD_S_3",
    "WALL_BLOOD_S_4",
    "WALL_BLOOD_S_5",
    "WALL_BLOOD_S_6",
    "WALL_BLOOD_S_7",
    "WALL_BLOOD_S_8",
    "WALL_BLOOD_S_9",
    "WALL_BLOOD_S_10",
    "WALL_BLOOD_S_11",
    "WALL_BLOOD_S_12",
    "WALL_BLOOD_S_13",
    "WALL_BLOOD_S_14",
    "WALL_BLOOD_S_15",
    "WALL_BLOOD_S_16",
    "WALL_BLOOD_S_17",
    "WALL_BLOOD_W",
    "WALL_BLOOD_W_1",
    "WALL_BLOOD_W_2",
    "WALL_BLOOD_W_3",
    "WALL_BLOOD_W_4",
    "WALL_BLOOD_W_5",
    "WALL_BLOOD_W_6",
    "WALL_BLOOD_W_7",
    "WALL_BLOOD_W_8",
    "WALL_BLOOD_W_9",
    "WALL_BLOOD_W_10",
    "WALL_BLOOD_W_11",
    "WALL_BLOOD_W_12",
    "WALL_BLOOD_W_13",
    "WALL_BLOOD_W_14",
    "WALL_BLOOD_W_15",
    "WALL_BLOOD_W_16",
    "WALL_BLOOD_W_17",
    "WALL_BLOOD_N",
    "WALL_BLOOD_N_1",
    "WALL_BLOOD_N_2",
    "WALL_BLOOD_N_3",
    "WALL_BLOOD_N_4",
    "WALL_BLOOD_N_5",
    "WALL_BLOOD_N_6",
    "WALL_BLOOD_N_7",
    "WALL_BLOOD_N_8",
    "WALL_BLOOD_N_9",
    "WALL_BLOOD_N_10",
    "WALL_BLOOD_N_11",
    "WALL_BLOOD_N_12",
    "WALL_BLOOD_N_13",
    "WALL_BLOOD_N_14",
    "WALL_BLOOD_N_15",
    "WALL_BLOOD_N_16",
    "WALL_BLOOD_N_17",
    "WALL_BLOOD_E",
    "WALL_BLOOD_E_1",
    "WALL_BLOOD_E_2",
    "WALL_BLOOD_E_3",
    "WALL_BLOOD_E_4",
    "WALL_BLOOD_E_5",
    "WALL_BLOOD_E_6",
    "WALL_BLOOD_E_7",
    "WALL_BLOOD_E_8",
    "WALL_BLOOD_E_9",
    "WALL_BLOOD_E_10",
    "WALL_BLOOD_E_11",
    "WALL_BLOOD_E_12",
    "WALL_BLOOD_E_13",
    "WALL_BLOOD_E_14",
    "WALL_BLOOD_E_15",
    "WALL_BLOOD_E_16",
    "WALL_BLOOD_E_17",
    "WALL_OLD_BLOOD",
    "WALL_OLD_BLOOD_1",
    "WALL_OLD_BLOOD_2",
    "WALL_OLD_BLOOD_3",
    "WALL_OLD_BLOOD_4",
    "WALL_OLD_BLOOD_5",
    "WALL_OLD_BLOOD_6",
    "WALL_OLD_BLOOD_7",
    "WALL_OLD_BLOOD_8",
    "WALL_OLD_BLOOD_9",
    "HALO",
    "HALO_RANGE",
    "UMBRA",
    "UMBRA_1",
    "UMBRA_2",
    "UMBRA_3",
    "ORB_GLOW",
    "ORB_GLOW_1",
    "QUAD_GLOW",
    "DISJUNCT",
    "DISJUNCT_1",
    "DISJUNCT_2",
    "DISJUNCT_3",
    "LANDING",
    "HEAT_AURA",
    "HEAT_AURA_1",
    "HEAT_AURA_2",
    "RAY",
    "RAY_OUT_OF_RANGE",
    "TRAVEL_EXCLUSION_BG",
    "TRAVEL_EXCLUSION_CENTRE_BG",
    "ITEM_SLOT",
    "SANCTUARY",
    "MOLD",
    "MOLD_1",
    "MOLD_2",
    "MOLD_3",
    "GLOWING_MOLD",
    "GLOWING_MOLD_1",
    "GLOWING_MOLD_2",
    "GLOWING_MOLD_3",
    "SILENCED",
    "KRAKEN_OVERLAY_NW",
    "KRAKEN_OVERLAY_NE",
    "KRAKEN_OVERLAY_SE",
    "KRAKEN_OVERLAY_SW",
    "ELDRITCH_OVERLAY_NW",
    "ELDRITCH_OVERLAY_NE",
    "ELDRITCH_OVERLAY_SE",
    "ELDRITCH_OVERLAY_SW",
    "STARSPAWN_OVERLAY_NW",
    "STARSPAWN_OVERLAY_NE",
    "STARSPAWN_OVERLAY_SE",
    "STARSPAWN_OVERLAY_SW",
    "VINE_OVERLAY_NW",
    "VINE_OVERLAY_NE",
    "VINE_OVERLAY_SE",
    "VINE_OVERLAY_SW",
};

const char *tile_feat_name(tileidx_t idx)
{
    ASSERT_RANGE(idx, TILE_WALL_MAX, TILE_FEAT_MAX);
    return _tile_feat_name[idx - TILE_WALL_MAX];
}

static tile_info _tile_feat_info[TILE_FEAT_MAX - TILE_WALL_MAX] =
{
    tile_info(32, 32, 3, 0, 0, 0, 29, 32),
    tile_info(32, 32, 3, 0, 29, 0, 58, 32),
    tile_info(32, 32, 2, 0, 58, 0, 88, 32),
    tile_info(32, 32, 2, 0, 88, 0, 118, 32),
    tile_info(32, 32, 2, 0, 118, 0, 148, 32),
    tile_info(32, 32, 0, 0, 148, 0, 180, 32),
    tile_info(32, 32, 0, 0, 180, 0, 212, 32),
    tile_info(32, 32, 0, 0, 212, 0, 244, 32),
    tile_info(32, 32, 0, 0, 244, 0, 276, 32),
    tile_info(32, 32, 0, 0, 276, 0, 308, 32),
    tile_info(32, 32, 0, 0, 308, 0, 340, 32),
    tile_info(32, 32, 5, 0, 340, 0, 362, 32),
    tile_info(32, 32, 0, 0, 362, 0, 394, 32),
    tile_info(32, 32, 4, 0, 394, 0, 422, 32),
    tile_info(32, 32, 0, 0, 422, 0, 454, 32),
    tile_info(32, 32, 0, 0, 454, 0, 486, 32),
    tile_info(32, 32, 0, 0, 486, 0, 518, 32),
    tile_info(32, 32, 0, 0, 518, 0, 550, 32),
    tile_info(32, 32, 0, 0, 550, 0, 582, 32),
    tile_info(32, 32, 0, 0, 582, 0, 614, 32),
    tile_info(32, 32, 0, 0, 614, 0, 646, 32),
    tile_info(32, 32, 3, 0, 646, 0, 675, 32),
    tile_info(32, 32, 3, 0, 675, 0, 704, 32),
    tile_info(32, 32, 0, 0, 704, 0, 736, 32),
    tile_info(32, 32, 3, 0, 736, 0, 765, 32),
    tile_info(32, 32, 3, 0, 765, 0, 794, 32),
    tile_info(32, 32, 3, 0, 794, 0, 823, 32),
    tile_info(32, 32, 3, 0, 823, 0, 852, 32),
    tile_info(32, 32, 0, 0, 852, 0, 884, 32),
    tile_info(32, 32, 0, 0, 884, 0, 916, 32),
    tile_info(32, 32, 4, 3, 916, 0, 942, 29),
    tile_info(32, 32, 2, 0, 942, 0, 972, 32),
    tile_info(32, 32, 1, 0, 972, 0, 1002, 32),
    tile_info(32, 32, 1, 1, 0, 32, 30, 63),
    tile_info(32, 32, 0, 0, 30, 32, 62, 64),
    tile_info(32, 32, 0, 0, 62, 32, 94, 64),
    tile_info(32, 32, 0, 0, 94, 32, 126, 64),
    tile_info(32, 32, 0, 0, 126, 32, 158, 64),
    tile_info(32, 32, 0, 0, 158, 32, 190, 64),
    tile_info(32, 32, 0, 0, 190, 32, 222, 64),
    tile_info(32, 32, 0, 0, 222, 32, 254, 64),
    tile_info(32, 32, 0, 0, 254, 32, 286, 64),
    tile_info(32, 32, 0, 0, 286, 32, 318, 64),
    tile_info(32, 32, 0, 0, 318, 32, 350, 64),
    tile_info(32, 32, 0, 0, 350, 32, 382, 40),
    tile_info(32, 32, 0, 0, 382, 32, 414, 64),
    tile_info(32, 32, 0, 0, 414, 32, 446, 64),
    tile_info(32, 32, 0, 0, 446, 32, 478, 64),
    tile_info(32, 32, 0, 0, 478, 32, 510, 64),
    tile_info(32, 32, 0, 0, 510, 32, 542, 64),
    tile_info(32, 32, 0, 0, 542, 32, 574, 64),
    tile_info(32, 32, 0, 0, 574, 32, 606, 64),
    tile_info(32, 32, 0, 0, 606, 32, 638, 64),
    tile_info(32, 32, 0, 0, 638, 32, 670, 64),
    tile_info(32, 32, 0, 0, 670, 32, 702, 64),
    tile_info(32, 32, 0, 0, 702, 32, 734, 64),
    tile_info(32, 32, 0, 0, 734, 32, 766, 64),
    tile_info(32, 32, 0, 0, 766, 32, 798, 64),
    tile_info(32, 32, 0, 0, 798, 32, 830, 64),
    tile_info(32, 32, 0, 0, 830, 32, 862, 64),
    tile_info(32, 32, 0, 0, 862, 32, 894, 64),
    tile_info(32, 32, 0, 0, 894, 32, 926, 64),
    tile_info(32, 32, 0, 0, 926, 32, 958, 64),
    tile_info(32, 32, 0, 0, 958, 32, 990, 64),
    tile_info(32, 32, 0, 0, 990, 32, 1022, 64),
    tile_info(32, 32, 0, 0, 0, 64, 32, 96),
    tile_info(32, 32, 0, 0, 32, 64, 64, 96),
    tile_info(32, 32, 0, 0, 64, 64, 96, 96),
    tile_info(32, 32, 0, 0, 96, 64, 128, 96),
    tile_info(32, 32, 0, 0, 128, 64, 160, 96),
    tile_info(32, 32, 0, 0, 160, 64, 192, 96),
    tile_info(32, 32, 0, 0, 192, 64, 224, 96),
    tile_info(32, 32, 0, 0, 224, 64, 256, 72),
    tile_info(32, 32, 0, 0, 256, 64, 288, 96),
    tile_info(32, 32, 0, 0, 288, 64, 320, 96),
    tile_info(32, 32, 0, 0, 320, 64, 352, 96),
    tile_info(32, 32, 0, 0, 352, 64, 384, 96),
    tile_info(32, 32, 0, 0, 384, 64, 416, 96),
    tile_info(32, 32, 0, 0, 416, 64, 448, 96),
    tile_info(32, 32, 0, 0, 448, 64, 480, 96),
    tile_info(32, 32, 3, 0, 480, 64, 507, 96),
    tile_info(32, 32, 0, 0, 507, 64, 539, 95),
    tile_info(32, 32, 1, 0, 539, 64, 570, 95),
    tile_info(32, 32, 0, 1, 570, 64, 602, 94),
    tile_info(32, 32, 1, 0, 602, 64, 633, 95),
    tile_info(32, 32, 0, 2, 633, 64, 665, 93),
    tile_info(32, 32, 1, 1, 665, 64, 696, 94),
    tile_info(32, 32, 1, 0, 696, 64, 727, 95),
    tile_info(32, 32, 0, 0, 727, 64, 759, 96),
    tile_info(32, 32, 0, 0, 759, 64, 791, 95),
    tile_info(32, 32, 0, 0, 791, 64, 823, 95),
    tile_info(32, 32, 0, 0, 823, 64, 855, 96),
    tile_info(32, 32, 1, 0, 855, 64, 886, 95),
    tile_info(32, 32, 1, 0, 886, 64, 917, 96),
    tile_info(32, 32, 1, 1, 917, 64, 948, 94),
    tile_info(32, 32, 0, 0, 948, 64, 980, 95),
    tile_info(32, 32, 1, 2, 980, 64, 1011, 93),
    tile_info(32, 32, 1, 0, 0, 96, 31, 127),
    tile_info(32, 32, 1, 0, 31, 96, 62, 127),
    tile_info(32, 32, 1, 0, 62, 96, 93, 127),
    tile_info(32, 32, 1, 0, 93, 96, 124, 127),
    tile_info(32, 32, 2, 0, 124, 96, 153, 127),
    tile_info(32, 32, 1, 0, 153, 96, 184, 128),
    tile_info(32, 32, 1, 0, 184, 96, 215, 127),
    tile_info(32, 32, 1, 0, 215, 96, 246, 127),
    tile_info(32, 32, 2, 1, 246, 96, 276, 126),
    tile_info(32, 32, 5, 1, 276, 96, 298, 126),
    tile_info(32, 32, 5, 5, 298, 96, 320, 122),
    tile_info(32, 32, 5, 1, 320, 96, 342, 126),
    tile_info(32, 32, 5, 11, 342, 96, 368, 116),
    tile_info(32, 32, 5, 1, 368, 96, 390, 126),
    tile_info(32, 32, 0, 8, 390, 96, 417, 120),
    tile_info(32, 32, 0, 0, 417, 96, 449, 127),
    tile_info(32, 32, 0, 3, 449, 96, 481, 125),
    tile_info(32, 32, 0, 3, 481, 96, 513, 125),
    tile_info(32, 32, 0, 3, 513, 96, 545, 125),
    tile_info(32, 32, 0, 1, 545, 96, 577, 127),
    tile_info(32, 32, 0, 0, 577, 96, 609, 128),
    tile_info(32, 32, 0, 0, 609, 96, 641, 128),
    tile_info(32, 32, 1, 2, 641, 96, 672, 126),
    tile_info(32, 32, 1, 2, 672, 96, 703, 126),
    tile_info(32, 32, 8, 0, 703, 96, 719, 128),
    tile_info(32, 32, 0, 3, 719, 96, 751, 125),
    tile_info(32, 32, 0, 3, 751, 96, 783, 125),
    tile_info(32, 32, 1, 0, 783, 96, 814, 128),
    tile_info(32, 32, 1, 0, 814, 96, 845, 127),
    tile_info(32, 32, 0, 0, 845, 96, 877, 128),
    tile_info(32, 32, 1, 4, 877, 96, 907, 120),
    tile_info(32, 32, 6, 6, 907, 96, 928, 119),
    tile_info(32, 32, 6, 6, 928, 96, 949, 119),
    tile_info(32, 32, 6, 6, 949, 96, 970, 119),
    tile_info(32, 32, 1, 9, 970, 96, 1000, 117),
    tile_info(32, 32, 1, 8, 0, 128, 30, 150),
    tile_info(32, 32, 1, 9, 30, 128, 60, 149),
    tile_info(32, 32, 1, 9, 60, 128, 90, 149),
    tile_info(32, 32, 1, 7, 90, 128, 120, 151),
    tile_info(32, 32, 1, 6, 120, 128, 150, 152),
    tile_info(32, 32, 1, 9, 150, 128, 180, 149),
    tile_info(32, 32, 0, 5, 180, 128, 212, 150),
    tile_info(32, 32, 1, 5, 212, 128, 242, 150),
    tile_info(32, 32, 0, 5, 242, 128, 274, 150),
    tile_info(32, 32, 0, 5, 274, 128, 306, 150),
    tile_info(32, 32, 0, 5, 306, 128, 338, 150),
    tile_info(32, 32, 7, 2, 338, 128, 356, 156),
    tile_info(32, 32, 1, 6, 356, 128, 386, 149),
    tile_info(32, 32, 0, 0, 386, 128, 418, 160),
    tile_info(32, 32, 0, 1, 418, 128, 446, 159),
    tile_info(32, 32, 0, 0, 446, 128, 477, 160),
    tile_info(32, 32, 0, 0, 477, 128, 509, 160),
    tile_info(32, 32, 2, 3, 509, 128, 538, 155),
    tile_info(32, 32, 0, 0, 538, 128, 570, 160),
    tile_info(32, 32, 0, 0, 570, 128, 602, 160),
    tile_info(32, 32, 0, 0, 602, 128, 634, 160),
    tile_info(32, 32, 0, 2, 634, 128, 666, 158),
    tile_info(32, 32, 0, 0, 666, 128, 698, 160),
    tile_info(32, 32, 0, 0, 698, 128, 730, 160),
    tile_info(32, 32, 0, 0, 730, 128, 762, 160),
    tile_info(32, 32, 0, 0, 762, 128, 794, 160),
    tile_info(32, 32, 0, 0, 794, 128, 826, 160),
    tile_info(32, 32, 0, 0, 826, 128, 858, 160),
    tile_info(32, 32, 0, 0, 858, 128, 890, 160),
    tile_info(32, 32, 0, 0, 890, 128, 922, 160),
    tile_info(32, 32, 0, 0, 922, 128, 954, 160),
    tile_info(32, 32, 0, 0, 954, 128, 986, 160),
    tile_info(32, 32, 0, 0, 986, 128, 1018, 160),
    tile_info(32, 32, 0, 0, 0, 160, 32, 192),
    tile_info(32, 32, 0, 0, 32, 160, 64, 192),
    tile_info(32, 32, 0, 0, 64, 160, 96, 192),
    tile_info(32, 32, 1, 3, 96, 160, 126, 185),
    tile_info(32, 32, 3, 1, 126, 160, 152, 191),
    tile_info(32, 32, 0, 2, 152, 160, 183, 189),
    tile_info(32, 32, 0, 0, 183, 160, 215, 192),
    tile_info(32, 32, 0, 2, 215, 160, 247, 189),
    tile_info(32, 32, 0, 0, 247, 160, 279, 192),
    tile_info(32, 32, 0, 0, 279, 160, 311, 192),
    tile_info(32, 32, 0, 0, 311, 160, 343, 192),
    tile_info(32, 32, 0, 0, 343, 160, 375, 192),
    tile_info(32, 32, 0, 0, 375, 160, 407, 192),
    tile_info(32, 32, 0, 0, 407, 160, 439, 192),
    tile_info(32, 32, 0, 0, 439, 160, 471, 192),
    tile_info(32, 32, 0, 0, 471, 160, 503, 192),
    tile_info(32, 32, 0, 0, 503, 160, 535, 192),
    tile_info(32, 32, 0, 0, 535, 160, 567, 192),
    tile_info(32, 32, 0, 0, 567, 160, 599, 192),
    tile_info(32, 32, 0, 0, 599, 160, 631, 192),
    tile_info(32, 32, 0, 0, 631, 160, 663, 192),
    tile_info(32, 32, 0, 0, 663, 160, 695, 192),
    tile_info(32, 32, 0, 0, 695, 160, 727, 192),
    tile_info(32, 32, 0, 0, 727, 160, 759, 192),
    tile_info(32, 32, 0, 0, 759, 160, 791, 192),
    tile_info(32, 32, 0, 0, 791, 160, 823, 192),
    tile_info(32, 32, 0, 0, 823, 160, 855, 192),
    tile_info(32, 32, 0, 1, 855, 160, 887, 190),
    tile_info(32, 32, 0, 0, 887, 160, 919, 192),
    tile_info(32, 32, 0, 0, 919, 160, 951, 192),
    tile_info(32, 32, 0, 0, 951, 160, 983, 192),
    tile_info(32, 32, 0, 1, 983, 160, 1015, 191),
    tile_info(32, 32, 0, 3, 0, 192, 32, 221),
    tile_info(32, 32, 0, 0, 32, 192, 64, 224),
    tile_info(32, 32, 0, 2, 64, 192, 96, 222),
    tile_info(32, 32, 0, 4, 96, 192, 128, 219),
    tile_info(32, 32, 0, 0, 128, 192, 160, 224),
    tile_info(32, 32, 0, 0, 160, 192, 192, 224),
    tile_info(32, 32, 0, 0, 192, 192, 224, 224),
    tile_info(32, 32, 0, 0, 224, 192, 256, 224),
    tile_info(32, 32, 0, 0, 256, 192, 288, 224),
    tile_info(32, 32, 0, 0, 288, 192, 320, 224),
    tile_info(32, 32, 0, 0, 320, 192, 352, 224),
    tile_info(32, 32, 1, 1, 352, 192, 382, 222),
    tile_info(32, 32, 1, 1, 382, 192, 412, 222),
    tile_info(32, 32, 1, 1, 412, 192, 442, 222),
    tile_info(32, 32, 0, 0, 442, 192, 474, 224),
    tile_info(32, 32, 0, 0, 474, 192, 506, 224),
    tile_info(32, 32, 0, 0, 506, 192, 538, 224),
    tile_info(32, 32, 3, 0, 538, 192, 564, 224),
    tile_info(32, 32, 0, 0, 564, 192, 596, 224),
    tile_info(32, 32, 0, 0, 596, 192, 628, 222),
    tile_info(32, 32, 0, 0, 628, 192, 659, 224),
    tile_info(32, 32, 0, 0, 659, 192, 690, 224),
    tile_info(32, 32, 0, 0, 690, 192, 722, 224),
    tile_info(32, 32, 1, 0, 722, 192, 751, 224),
    tile_info(32, 32, 0, 0, 751, 192, 782, 224),
    tile_info(32, 32, 0, 0, 782, 192, 813, 224),
    tile_info(32, 32, 0, 0, 813, 192, 844, 224),
    tile_info(32, 32, 0, 0, 844, 192, 876, 224),
    tile_info(32, 32, 0, 0, 876, 192, 907, 224),
    tile_info(32, 32, 0, 0, 907, 192, 938, 224),
    tile_info(32, 32, 0, 0, 938, 192, 970, 224),
    tile_info(32, 32, 0, 0, 970, 192, 1001, 224),
    tile_info(32, 32, 0, 0, 0, 224, 31, 256),
    tile_info(32, 32, 0, 0, 31, 224, 63, 256),
    tile_info(32, 32, 0, 0, 63, 224, 94, 256),
    tile_info(32, 32, 0, 0, 94, 224, 125, 256),
    tile_info(32, 32, 0, 0, 125, 224, 157, 256),
    tile_info(32, 32, 1, 0, 157, 224, 186, 256),
    tile_info(32, 32, 0, 0, 186, 224, 218, 256),
    tile_info(32, 32, 0, 0, 218, 224, 250, 256),
    tile_info(32, 32, 0, 0, 250, 224, 282, 256),
    tile_info(32, 32, 0, 0, 282, 224, 314, 256),
    tile_info(32, 32, 0, 0, 314, 224, 346, 256),
    tile_info(32, 32, 5, 0, 346, 224, 367, 256),
    tile_info(32, 32, 0, 0, 367, 224, 399, 256),
    tile_info(32, 32, 3, 2, 399, 224, 425, 253),
    tile_info(32, 32, 3, 2, 425, 224, 451, 253),
    tile_info(32, 32, 3, 2, 451, 224, 477, 253),
    tile_info(32, 32, 3, 2, 477, 224, 503, 253),
    tile_info(32, 32, 2, 0, 503, 224, 531, 256),
    tile_info(32, 32, 0, 0, 531, 224, 563, 256),
    tile_info(32, 32, 0, 0, 563, 224, 595, 256),
    tile_info(32, 32, 1, 1, 595, 224, 626, 255),
    tile_info(32, 32, 0, 1, 626, 224, 658, 255),
    tile_info(32, 32, 0, 1, 658, 224, 689, 255),
    tile_info(32, 32, 2, 2, 689, 224, 717, 254),
    tile_info(32, 32, 2, 2, 717, 224, 745, 252),
    tile_info(32, 32, 1, 0, 745, 224, 774, 256),
    tile_info(32, 32, 1, 0, 774, 224, 803, 256),
    tile_info(32, 32, 2, 0, 803, 224, 831, 256),
    tile_info(32, 32, 2, 0, 831, 224, 859, 256),
    tile_info(32, 32, 2, 0, 859, 224, 887, 256),
    tile_info(32, 32, 2, 0, 887, 224, 915, 256),
    tile_info(32, 32, 2, 0, 915, 224, 943, 256),
    tile_info(32, 32, 2, 0, 943, 224, 971, 256),
    tile_info(32, 32, 2, 0, 971, 224, 999, 256),
    tile_info(32, 32, 2, 0, 0, 256, 28, 288),
    tile_info(32, 32, 2, 0, 28, 256, 56, 288),
    tile_info(32, 32, 2, 1, 56, 256, 84, 287),
    tile_info(32, 32, 0, 0, 84, 256, 116, 288),
    tile_info(32, 32, 0, 0, 116, 256, 148, 288),
    tile_info(32, 32, 2, 0, 148, 256, 178, 288),
    tile_info(32, 32, 2, 4, 178, 256, 204, 284),
    tile_info(32, 32, 0, 0, 204, 256, 236, 288),
    tile_info(32, 32, 0, 0, 236, 256, 268, 288),
    tile_info(32, 32, 4, 0, 268, 256, 293, 288),
    tile_info(32, 32, 4, 0, 293, 256, 317, 288),
    tile_info(32, 32, 3, 1, 317, 256, 343, 287),
    tile_info(32, 32, 3, 1, 343, 256, 369, 287),
    tile_info(32, 32, 0, 0, 369, 256, 401, 288),
    tile_info(32, 32, 0, 0, 401, 256, 433, 288),
    tile_info(32, 32, 0, 0, 433, 256, 465, 288),
    tile_info(32, 32, 1, 2, 465, 256, 495, 286),
    tile_info(32, 32, 1, 0, 495, 256, 525, 288),
    tile_info(32, 32, 2, 0, 525, 256, 553, 288),
    tile_info(32, 32, 2, 3, 553, 256, 581, 285),
    tile_info(32, 32, 2, 1, 581, 256, 609, 287),
    tile_info(32, 32, 2, 2, 609, 256, 637, 286),
    tile_info(32, 32, 2, 2, 637, 256, 665, 286),
    tile_info(32, 32, 2, 2, 665, 256, 693, 286),
    tile_info(32, 32, 2, 2, 693, 256, 721, 286),
    tile_info(32, 32, 2, 2, 721, 256, 749, 286),
    tile_info(32, 32, 2, 2, 749, 256, 777, 286),
    tile_info(32, 32, 2, 2, 777, 256, 805, 286),
    tile_info(32, 32, 2, 2, 805, 256, 833, 286),
    tile_info(32, 32, 1, 0, 833, 256, 863, 288),
    tile_info(32, 32, 1, 0, 863, 256, 893, 288),
    tile_info(32, 32, 2, 0, 893, 256, 921, 288),
    tile_info(32, 32, 2, 0, 921, 256, 949, 288),
    tile_info(32, 32, 2, 0, 949, 256, 977, 288),
    tile_info(32, 32, 2, 0, 977, 256, 1005, 288),
    tile_info(32, 32, 2, 0, 0, 288, 28, 320),
    tile_info(32, 32, 2, 0, 28, 288, 56, 320),
    tile_info(32, 32, 2, 0, 56, 288, 84, 320),
    tile_info(32, 32, 2, 0, 84, 288, 112, 320),
    tile_info(32, 32, 2, 0, 112, 288, 140, 320),
    tile_info(32, 32, 2, 3, 140, 288, 168, 317),
    tile_info(32, 32, 2, 7, 168, 288, 196, 313),
    tile_info(32, 32, 1, 1, 196, 288, 225, 319),
    tile_info(32, 32, 1, 1, 225, 288, 254, 319),
    tile_info(32, 32, 1, 1, 254, 288, 283, 319),
    tile_info(32, 32, 1, 1, 283, 288, 312, 319),
    tile_info(32, 32, 1, 1, 312, 288, 341, 319),
    tile_info(32, 32, 2, 4, 341, 288, 369, 316),
    tile_info(32, 32, 2, 0, 369, 288, 397, 320),
    tile_info(32, 32, 2, 1, 397, 288, 425, 319),
    tile_info(32, 32, 2, 11, 425, 288, 453, 309),
    tile_info(32, 32, 2, 11, 453, 288, 481, 309),
    tile_info(32, 32, 2, 11, 481, 288, 509, 309),
    tile_info(32, 32, 2, 12, 509, 288, 537, 308),
    tile_info(32, 32, 2, 10, 537, 288, 565, 310),
    tile_info(32, 32, 2, 11, 565, 288, 593, 309),
    tile_info(32, 32, 2, 11, 593, 288, 621, 309),
    tile_info(32, 32, 2, 10, 621, 288, 649, 310),
    tile_info(32, 32, 2, 10, 649, 288, 677, 310),
    tile_info(32, 32, 2, 12, 677, 288, 705, 308),
    tile_info(32, 32, 2, 12, 705, 288, 733, 308),
    tile_info(32, 32, 1, 0, 733, 288, 763, 320),
    tile_info(32, 32, 2, 1, 763, 288, 791, 319),
    tile_info(30, 31, 0, 0, 791, 288, 821, 319),
    tile_info(32, 32, 2, 2, 821, 288, 849, 318),
    tile_info(32, 32, 2, 1, 849, 288, 877, 319),
    tile_info(32, 32, 2, 3, 877, 288, 905, 317),
    tile_info(32, 32, 2, 0, 905, 288, 935, 320),
    tile_info(32, 32, 0, 0, 935, 288, 967, 320),
    tile_info(32, 32, 0, 0, 967, 288, 999, 320),
    tile_info(32, 32, 0, 0, 0, 320, 32, 352),
    tile_info(32, 32, 0, 0, 32, 320, 64, 352),
    tile_info(32, 32, 0, 0, 64, 320, 96, 352),
    tile_info(32, 32, 1, 1, 96, 320, 126, 351),
    tile_info(32, 32, 2, 5, 126, 320, 154, 347),
    tile_info(32, 32, 1, 0, 154, 320, 185, 352),
    tile_info(32, 32, 1, 0, 185, 320, 216, 352),
    tile_info(32, 32, 1, 0, 216, 320, 247, 352),
    tile_info(32, 32, 1, 0, 247, 320, 278, 352),
    tile_info(32, 32, 1, 0, 278, 320, 309, 352),
    tile_info(32, 32, 1, 0, 309, 320, 340, 352),
    tile_info(32, 32, 1, 0, 340, 320, 371, 352),
    tile_info(32, 32, 1, 0, 371, 320, 402, 352),
    tile_info(32, 32, 0, 0, 402, 320, 434, 352),
    tile_info(32, 32, 4, 3, 434, 320, 461, 348),
    tile_info(32, 32, 3, 0, 461, 320, 488, 351),
    tile_info(32, 32, 1, 1, 488, 320, 517, 349),
    tile_info(32, 32, 3, 2, 517, 320, 543, 349),
    tile_info(32, 32, 2, 1, 543, 320, 568, 347),
    tile_info(32, 32, 0, 0, 568, 320, 600, 347),
    tile_info(32, 32, 3, 2, 600, 320, 620, 347),
    tile_info(32, 32, 4, 0, 620, 320, 645, 350),
    tile_info(32, 32, 1, 2, 645, 320, 675, 350),
    tile_info(32, 32, 4, 3, 675, 320, 698, 348),
    tile_info(32, 32, 2, 2, 698, 320, 726, 350),
    tile_info(32, 32, 2, 4, 726, 320, 752, 347),
    tile_info(32, 32, 5, 4, 752, 320, 777, 347),
    tile_info(32, 32, 0, 2, 777, 320, 806, 348),
    tile_info(32, 32, 3, 1, 806, 320, 835, 350),
    tile_info(32, 32, 0, 0, 835, 320, 866, 350),
    tile_info(32, 32, 4, 4, 866, 320, 894, 347),
    tile_info(32, 32, 1, 2, 894, 320, 923, 350),
    tile_info(32, 32, 1, 3, 923, 320, 951, 349),
    tile_info(32, 32, 3, 0, 951, 320, 976, 350),
    tile_info(32, 32, 2, 1, 976, 320, 1003, 349),
    tile_info(32, 32, 2, 7, 0, 352, 22, 376),
    tile_info(32, 32, 2, 2, 22, 352, 47, 381),
    tile_info(32, 32, 2, 2, 47, 352, 76, 380),
    tile_info(32, 32, 1, 1, 76, 352, 104, 381),
    tile_info(32, 32, 1, 1, 104, 352, 129, 383),
    tile_info(32, 32, 1, 2, 129, 352, 158, 381),
    tile_info(32, 32, 0, 2, 158, 352, 188, 378),
    tile_info(32, 32, 1, 2, 188, 352, 217, 380),
    tile_info(32, 32, 3, 1, 217, 352, 243, 382),
    tile_info(32, 32, 3, 0, 243, 352, 269, 384),
    tile_info(32, 32, 3, 4, 269, 352, 295, 380),
    tile_info(32, 32, 1, 1, 295, 352, 324, 383),
    tile_info(32, 32, 2, 3, 324, 352, 353, 381),
    tile_info(32, 32, 12, 5, 353, 352, 368, 379),
    tile_info(32, 32, 1, 4, 368, 352, 397, 380),
    tile_info(32, 32, 1, 5, 397, 352, 426, 379),
    tile_info(32, 32, 2, 3, 426, 352, 455, 381),
    tile_info(32, 32, 4, 4, 455, 352, 481, 380),
    tile_info(32, 32, 11, 11, 481, 352, 489, 373),
    tile_info(32, 32, 0, 3, 489, 352, 521, 381),
    tile_info(32, 32, 0, 5, 521, 352, 551, 379),
    tile_info(32, 32, 1, 6, 551, 352, 579, 375),
    tile_info(32, 32, 1, 0, 579, 352, 609, 384),
    tile_info(32, 32, 1, 1, 609, 352, 637, 383),
    tile_info(32, 32, 1, 0, 637, 352, 666, 384),
    tile_info(32, 32, 3, 7, 666, 352, 692, 377),
    tile_info(32, 32, 2, 0, 692, 352, 722, 384),
    tile_info(32, 32, 0, 3, 722, 352, 754, 379),
    tile_info(32, 32, 0, 1, 754, 352, 782, 381),
    tile_info(32, 32, 0, 1, 782, 352, 813, 381),
    tile_info(32, 32, 0, 2, 813, 352, 842, 381),
    tile_info(32, 32, 0, 5, 842, 352, 869, 374),
    tile_info(32, 32, 0, 1, 869, 352, 897, 380),
    tile_info(32, 32, 0, 1, 897, 352, 924, 381),
    tile_info(32, 32, 0, 2, 924, 352, 953, 381),
    tile_info(32, 32, 0, 4, 953, 352, 981, 378),
    tile_info(32, 32, 0, 9, 981, 352, 1002, 362),
    tile_info(32, 32, 0, 0, 0, 384, 29, 416),
    tile_info(32, 32, 0, 0, 29, 384, 56, 414),
    tile_info(32, 32, 3, 1, 56, 384, 79, 412),
    tile_info(32, 32, 0, 1, 79, 384, 111, 414),
    tile_info(32, 32, 0, 1, 111, 384, 142, 412),
    tile_info(32, 32, 0, 1, 142, 384, 174, 413),
    tile_info(32, 32, 0, 3, 174, 384, 199, 410),
    tile_info(32, 32, 0, 2, 199, 384, 231, 414),
    tile_info(32, 32, 2, 0, 231, 384, 258, 416),
    tile_info(32, 32, 2, 0, 258, 384, 287, 412),
    tile_info(32, 32, 2, 0, 287, 384, 316, 415),
    tile_info(32, 32, 1, 0, 316, 384, 345, 413),
    tile_info(32, 32, 5, 0, 345, 384, 367, 411),
    tile_info(32, 32, 2, 0, 367, 384, 396, 412),
    tile_info(32, 32, 2, 0, 396, 384, 425, 411),
    tile_info(32, 32, 1, 0, 425, 384, 454, 413),
    tile_info(32, 32, 2, 0, 454, 384, 480, 412),
    tile_info(32, 32, 13, 0, 480, 384, 490, 405),
    tile_info(32, 32, 0, 0, 490, 384, 522, 413),
    tile_info(32, 32, 2, 0, 522, 384, 552, 411),
    tile_info(32, 32, 3, 3, 552, 384, 580, 407),
    tile_info(32, 32, 1, 0, 580, 384, 610, 416),
    tile_info(32, 32, 3, 0, 610, 384, 638, 415),
    tile_info(32, 32, 2, 0, 638, 384, 667, 416),
    tile_info(32, 32, 3, 0, 667, 384, 693, 409),
    tile_info(32, 32, 0, 0, 693, 384, 723, 416),
    tile_info(32, 32, 0, 3, 723, 384, 755, 410),
    tile_info(32, 32, 4, 3, 755, 384, 783, 410),
    tile_info(32, 32, 1, 2, 783, 384, 814, 413),
    tile_info(32, 32, 3, 1, 814, 384, 843, 413),
    tile_info(32, 32, 5, 5, 843, 384, 870, 399),
    tile_info(32, 32, 4, 2, 870, 384, 898, 413),
    tile_info(32, 32, 5, 2, 898, 384, 925, 413),
    tile_info(32, 32, 3, 1, 925, 384, 954, 413),
    tile_info(32, 32, 4, 2, 954, 384, 982, 410),
    tile_info(32, 32, 11, 13, 982, 384, 1003, 392),
    tile_info(32, 32, 3, 0, 0, 416, 29, 448),
    tile_info(32, 32, 5, 2, 29, 416, 56, 446),
    tile_info(32, 32, 6, 3, 56, 416, 79, 444),
    tile_info(32, 32, 0, 1, 79, 416, 111, 446),
    tile_info(32, 32, 1, 3, 111, 416, 142, 444),
    tile_info(32, 32, 0, 2, 142, 416, 174, 445),
    tile_info(32, 32, 7, 3, 174, 416, 199, 442),
    tile_info(32, 32, 0, 0, 199, 416, 231, 446),
    tile_info(32, 32, 2, 2, 231, 416, 260, 446),
    tile_info(32, 32, 2, 2, 260, 416, 289, 446),
    tile_info(32, 32, 1, 1, 289, 416, 319, 447),
    tile_info(32, 32, 1, 2, 319, 416, 349, 445),
    tile_info(32, 32, 1, 2, 349, 416, 378, 446),
    tile_info(32, 32, 1, 1, 378, 416, 408, 447),
    tile_info(32, 32, 1, 0, 408, 416, 438, 447),
    tile_info(32, 32, 1, 1, 438, 416, 467, 447),
    tile_info(32, 32, 1, 1, 467, 416, 497, 446),
    tile_info(32, 32, 1, 1, 497, 416, 522, 447),
    tile_info(32, 32, 0, 0, 522, 416, 554, 448),
    tile_info(32, 32, 0, 0, 554, 416, 586, 448),
    tile_info(32, 32, 0, 0, 586, 416, 618, 448),
    tile_info(32, 32, 0, 0, 618, 416, 650, 448),
    tile_info(32, 32, 0, 0, 650, 416, 682, 448),
    tile_info(32, 32, 0, 0, 682, 416, 714, 448),
    tile_info(32, 32, 0, 0, 714, 416, 746, 448),
    tile_info(32, 32, 0, 0, 746, 416, 778, 448),
    tile_info(32, 32, 0, 0, 778, 416, 810, 448),
    tile_info(32, 32, 0, 0, 810, 416, 842, 448),
    tile_info(32, 32, 0, 0, 842, 416, 874, 448),
    tile_info(32, 32, 0, 0, 874, 416, 906, 448),
    tile_info(32, 32, 0, 0, 906, 416, 938, 448),
    tile_info(32, 32, 0, 0, 938, 416, 970, 448),
    tile_info(32, 32, 0, 0, 970, 416, 1002, 448),
    tile_info(32, 32, 0, 0, 0, 448, 32, 480),
    tile_info(32, 32, 0, 0, 32, 448, 64, 480),
    tile_info(32, 32, 0, 0, 64, 448, 96, 480),
    tile_info(32, 32, 0, 0, 96, 448, 128, 480),
    tile_info(32, 32, 0, 0, 128, 448, 160, 480),
    tile_info(32, 32, 0, 0, 160, 448, 192, 480),
    tile_info(32, 32, 0, 0, 192, 448, 224, 480),
    tile_info(32, 32, 0, 0, 224, 448, 256, 480),
    tile_info(32, 32, 0, 0, 256, 448, 288, 480),
    tile_info(32, 32, 0, 0, 288, 448, 320, 480),
    tile_info(32, 32, 1, 1, 320, 448, 351, 479),
    tile_info(32, 32, 0, 0, 351, 448, 383, 480),
    tile_info(32, 32, 0, 0, 383, 448, 415, 480),
    tile_info(32, 32, 0, 0, 415, 448, 447, 480),
    tile_info(32, 32, 1, 1, 447, 448, 478, 479),
    tile_info(32, 32, 0, 0, 478, 448, 510, 480),
    tile_info(32, 32, 0, 0, 510, 448, 542, 480),
    tile_info(32, 32, 0, 0, 542, 448, 574, 480),
    tile_info(32, 32, 0, 0, 574, 448, 606, 480),
    tile_info(32, 32, 0, 0, 606, 448, 638, 480),
    tile_info(32, 32, 0, 0, 638, 448, 670, 480),
    tile_info(32, 32, 0, 0, 670, 448, 702, 480),
    tile_info(32, 32, 0, 0, 702, 448, 734, 480),
    tile_info(32, 32, 0, 0, 734, 448, 766, 480),
    tile_info(32, 32, 0, 0, 766, 448, 798, 480),
    tile_info(32, 32, 0, 0, 798, 448, 830, 480),
    tile_info(32, 32, 0, 0, 830, 448, 862, 480),
    tile_info(32, 32, 0, 0, 862, 448, 894, 480),
    tile_info(32, 32, 0, 0, 894, 448, 926, 480),
    tile_info(32, 32, 0, 0, 926, 448, 958, 480),
    tile_info(32, 32, 0, 0, 958, 448, 990, 480),
    tile_info(32, 32, 0, 0, 990, 448, 1022, 480),
    tile_info(32, 32, 0, 0, 0, 480, 32, 512),
};

tile_info &tile_feat_info(tileidx_t idx)
{
    ASSERT_RANGE(idx, TILE_WALL_MAX, TILE_FEAT_MAX);
    return _tile_feat_info[idx - TILE_WALL_MAX];
}


typedef pair<const char*, tileidx_t> _name_pair;

static _name_pair feat_name_pairs[] =
{
    _name_pair("blood", 347 + TILE_WALL_MAX),
    _name_pair("disjunct", 468 + TILE_WALL_MAX),
    _name_pair("dngn_abandoned_shop", 186 + TILE_WALL_MAX),
    _name_pair("dngn_abyssal_stair", 240 + TILE_WALL_MAX),
    _name_pair("dngn_altar_ashenzari", 326 + TILE_WALL_MAX),
    _name_pair("dngn_altar_beogh", 312 + TILE_WALL_MAX),
    _name_pair("dngn_altar_cheibriados", 325 + TILE_WALL_MAX),
    _name_pair("dngn_altar_dithmenos", 327 + TILE_WALL_MAX),
    _name_pair("dngn_altar_elyvilon", 310 + TILE_WALL_MAX),
    _name_pair("dngn_altar_fedhas", 324 + TILE_WALL_MAX),
    _name_pair("dngn_altar_gozag", 330 + TILE_WALL_MAX),
    _name_pair("dngn_altar_jiyva", 313 + TILE_WALL_MAX),
    _name_pair("dngn_altar_kikubaaqudgha", 282 + TILE_WALL_MAX),
    _name_pair("dngn_altar_lugonu", 311 + TILE_WALL_MAX),
    _name_pair("dngn_altar_makhleb", 295 + TILE_WALL_MAX),
    _name_pair("dngn_altar_nemelex_xobeh", 305 + TILE_WALL_MAX),
    _name_pair("dngn_altar_okawaru", 294 + TILE_WALL_MAX),
    _name_pair("dngn_altar_qazlal", 333 + TILE_WALL_MAX),
    _name_pair("dngn_altar_ru", 336 + TILE_WALL_MAX),
    _name_pair("dngn_altar_shining_one", 281 + TILE_WALL_MAX),
    _name_pair("dngn_altar_sif_muna", 303 + TILE_WALL_MAX),
    _name_pair("dngn_altar_trog", 304 + TILE_WALL_MAX),
    _name_pair("dngn_altar_vehumet", 292 + TILE_WALL_MAX),
    _name_pair("dngn_altar_xom", 284 + TILE_WALL_MAX),
    _name_pair("dngn_altar_yredelemnul", 283 + TILE_WALL_MAX),
    _name_pair("dngn_altar_zin", 280 + TILE_WALL_MAX),
    _name_pair("dngn_blood_fountain", 342 + TILE_WALL_MAX),
    _name_pair("dngn_blue_fountain", 338 + TILE_WALL_MAX),
    _name_pair("dngn_closed_door", 35 + TILE_WALL_MAX),
    _name_pair("dngn_closed_door_crypt", 63 + TILE_WALL_MAX),
    _name_pair("dngn_crumbled_column", 106 + TILE_WALL_MAX),
    _name_pair("dngn_dimension_edge", 126 + TILE_WALL_MAX),
    _name_pair("dngn_disco_ball", 127 + TILE_WALL_MAX),
    _name_pair("dngn_dry_fountain", 344 + TILE_WALL_MAX),
    _name_pair("dngn_dry_fountain_white", 345 + TILE_WALL_MAX),
    _name_pair("dngn_enter", 172 + TILE_WALL_MAX),
    _name_pair("dngn_enter_abyss", 235 + TILE_WALL_MAX),
    _name_pair("dngn_enter_cocytus", 228 + TILE_WALL_MAX),
    _name_pair("dngn_enter_crypt", 213 + TILE_WALL_MAX),
    _name_pair("dngn_enter_depths", 211 + TILE_WALL_MAX),
    _name_pair("dngn_enter_dis", 222 + TILE_WALL_MAX),
    _name_pair("dngn_enter_elf", 194 + TILE_WALL_MAX),
    _name_pair("dngn_enter_gehenna", 225 + TILE_WALL_MAX),
    _name_pair("dngn_enter_hell", 217 + TILE_WALL_MAX),
    _name_pair("dngn_enter_lair", 196 + TILE_WALL_MAX),
    _name_pair("dngn_enter_orc", 192 + TILE_WALL_MAX),
    _name_pair("dngn_enter_pandemonium", 241 + TILE_WALL_MAX),
    _name_pair("dngn_enter_shoals", 204 + TILE_WALL_MAX),
    _name_pair("dngn_enter_slime", 206 + TILE_WALL_MAX),
    _name_pair("dngn_enter_snake", 198 + TILE_WALL_MAX),
    _name_pair("dngn_enter_spider", 202 + TILE_WALL_MAX),
    _name_pair("dngn_enter_swamp", 200 + TILE_WALL_MAX),
    _name_pair("dngn_enter_tartarus", 231 + TILE_WALL_MAX),
    _name_pair("dngn_enter_temple", 190 + TILE_WALL_MAX),
    _name_pair("dngn_enter_tomb", 215 + TILE_WALL_MAX),
    _name_pair("dngn_enter_vaults_closed", 208 + TILE_WALL_MAX),
    _name_pair("dngn_enter_vaults_open", 209 + TILE_WALL_MAX),
    _name_pair("dngn_enter_zot_closed", 187 + TILE_WALL_MAX),
    _name_pair("dngn_enter_zot_open", 188 + TILE_WALL_MAX),
    _name_pair("dngn_escape_hatch_down", 168 + TILE_WALL_MAX),
    _name_pair("dngn_escape_hatch_up", 169 + TILE_WALL_MAX),
    _name_pair("dngn_exit_abyss", 238 + TILE_WALL_MAX),
    _name_pair("dngn_exit_crypt", 214 + TILE_WALL_MAX),
    _name_pair("dngn_exit_dungeon", 165 + TILE_WALL_MAX),
    _name_pair("dngn_exit_elf", 195 + TILE_WALL_MAX),
    _name_pair("dngn_exit_lair", 197 + TILE_WALL_MAX),
    _name_pair("dngn_exit_orc", 193 + TILE_WALL_MAX),
    _name_pair("dngn_exit_pandemonium", 247 + TILE_WALL_MAX),
    _name_pair("dngn_exit_shoals", 205 + TILE_WALL_MAX),
    _name_pair("dngn_exit_slime", 207 + TILE_WALL_MAX),
    _name_pair("dngn_exit_snake", 199 + TILE_WALL_MAX),
    _name_pair("dngn_exit_spider", 203 + TILE_WALL_MAX),
    _name_pair("dngn_exit_swamp", 201 + TILE_WALL_MAX),
    _name_pair("dngn_exit_temple", 191 + TILE_WALL_MAX),
    _name_pair("dngn_exit_tomb", 216 + TILE_WALL_MAX),
    _name_pair("dngn_exit_vaults", 210 + TILE_WALL_MAX),
    _name_pair("dngn_exit_volcano", 251 + TILE_WALL_MAX),
    _name_pair("dngn_fleshy_orifice", 77 + TILE_WALL_MAX),
    _name_pair("dngn_fountain", 338 + TILE_WALL_MAX),
    _name_pair("dngn_gate_closed_left", 36 + TILE_WALL_MAX),
    _name_pair("dngn_gate_closed_left_crypt", 64 + TILE_WALL_MAX),
    _name_pair("dngn_gate_closed_middle", 37 + TILE_WALL_MAX),
    _name_pair("dngn_gate_closed_middle_crypt", 65 + TILE_WALL_MAX),
    _name_pair("dngn_gate_closed_right", 38 + TILE_WALL_MAX),
    _name_pair("dngn_gate_closed_right_crypt", 66 + TILE_WALL_MAX),
    _name_pair("dngn_gate_open_left", 43 + TILE_WALL_MAX),
    _name_pair("dngn_gate_open_left_crypt", 71 + TILE_WALL_MAX),
    _name_pair("dngn_gate_open_middle", 44 + TILE_WALL_MAX),
    _name_pair("dngn_gate_open_middle_crypt", 72 + TILE_WALL_MAX),
    _name_pair("dngn_gate_open_right", 45 + TILE_WALL_MAX),
    _name_pair("dngn_gate_open_right_crypt", 73 + TILE_WALL_MAX),
    _name_pair("dngn_gate_runed_left", 50 + TILE_WALL_MAX),
    _name_pair("dngn_gate_runed_middle", 51 + TILE_WALL_MAX),
    _name_pair("dngn_gate_runed_right", 52 + TILE_WALL_MAX),
    _name_pair("dngn_gate_sealed_left", 57 + TILE_WALL_MAX),
    _name_pair("dngn_gate_sealed_middle", 58 + TILE_WALL_MAX),
    _name_pair("dngn_gate_sealed_right", 59 + TILE_WALL_MAX),
    _name_pair("dngn_golden_statue", 119 + TILE_WALL_MAX),
    _name_pair("dngn_granite_statue", 81 + TILE_WALL_MAX),
    _name_pair("dngn_gravestone", 113 + TILE_WALL_MAX),
    _name_pair("dngn_gravestone_ornate", 116 + TILE_WALL_MAX),
    _name_pair("dngn_machine_tukima", 117 + TILE_WALL_MAX),
    _name_pair("dngn_mangrove", 32 + TILE_WALL_MAX),
    _name_pair("dngn_open_door", 42 + TILE_WALL_MAX),
    _name_pair("dngn_open_door_crypt", 70 + TILE_WALL_MAX),
    _name_pair("dngn_orcish_idol", 80 + TILE_WALL_MAX),
    _name_pair("dngn_portal", 242 + TILE_WALL_MAX),
    _name_pair("dngn_portal_bailey", 268 + TILE_WALL_MAX),
    _name_pair("dngn_portal_bailey_gone", 269 + TILE_WALL_MAX),
    _name_pair("dngn_portal_bazaar", 274 + TILE_WALL_MAX),
    _name_pair("dngn_portal_bazaar_gone", 275 + TILE_WALL_MAX),
    _name_pair("dngn_portal_expired", 244 + TILE_WALL_MAX),
    _name_pair("dngn_portal_ice_cave", 254 + TILE_WALL_MAX),
    _name_pair("dngn_portal_ice_cave_gone", 255 + TILE_WALL_MAX),
    _name_pair("dngn_portal_labyrinth", 270 + TILE_WALL_MAX),
    _name_pair("dngn_portal_labyrinth_gone", 271 + TILE_WALL_MAX),
    _name_pair("dngn_portal_ossuary", 266 + TILE_WALL_MAX),
    _name_pair("dngn_portal_ossuary_gone", 267 + TILE_WALL_MAX),
    _name_pair("dngn_portal_sewer", 252 + TILE_WALL_MAX),
    _name_pair("dngn_portal_sewer_rusted", 253 + TILE_WALL_MAX),
    _name_pair("dngn_portal_trove", 272 + TILE_WALL_MAX),
    _name_pair("dngn_portal_trove_gone", 273 + TILE_WALL_MAX),
    _name_pair("dngn_portal_volcano", 249 + TILE_WALL_MAX),
    _name_pair("dngn_portal_volcano_gone", 250 + TILE_WALL_MAX),
    _name_pair("dngn_portal_wizard_lab", 256 + TILE_WALL_MAX),
    _name_pair("dngn_portal_wizlab_gone", 265 + TILE_WALL_MAX),
    _name_pair("dngn_portal_ziggurat", 276 + TILE_WALL_MAX),
    _name_pair("dngn_portal_ziggurat_gone", 277 + TILE_WALL_MAX),
    _name_pair("dngn_return", 173 + TILE_WALL_MAX),
    _name_pair("dngn_return_depths", 212 + TILE_WALL_MAX),
    _name_pair("dngn_return_hell", 234 + TILE_WALL_MAX),
    _name_pair("dngn_return_vestibule", 220 + TILE_WALL_MAX),
    _name_pair("dngn_return_zot", 189 + TILE_WALL_MAX),
    _name_pair("dngn_runed_door", 49 + TILE_WALL_MAX),
    _name_pair("dngn_sarcophagus_pedestal_left", 122 + TILE_WALL_MAX),
    _name_pair("dngn_sarcophagus_pedestal_right", 123 + TILE_WALL_MAX),
    _name_pair("dngn_sarcophagus_sealed", 121 + TILE_WALL_MAX),
    _name_pair("dngn_sealed_door", 56 + TILE_WALL_MAX),
    _name_pair("dngn_sealed_stairs_down", 175 + TILE_WALL_MAX),
    _name_pair("dngn_sealed_stairs_up", 174 + TILE_WALL_MAX),
    _name_pair("dngn_shoals_stairs_down", 170 + TILE_WALL_MAX),
    _name_pair("dngn_shoals_stairs_up", 171 + TILE_WALL_MAX),
    _name_pair("dngn_sparkling_fountain", 340 + TILE_WALL_MAX),
    _name_pair("dngn_starry_portal", 245 + TILE_WALL_MAX),
    _name_pair("dngn_statue_ancient_evil", 104 + TILE_WALL_MAX),
    _name_pair("dngn_statue_ancient_hero", 103 + TILE_WALL_MAX),
    _name_pair("dngn_statue_angel", 92 + TILE_WALL_MAX),
    _name_pair("dngn_statue_cat", 86 + TILE_WALL_MAX),
    _name_pair("dngn_statue_centaur", 84 + TILE_WALL_MAX),
    _name_pair("dngn_statue_demonic_bust", 98 + TILE_WALL_MAX),
    _name_pair("dngn_statue_dragon", 90 + TILE_WALL_MAX),
    _name_pair("dngn_statue_elephant", 93 + TILE_WALL_MAX),
    _name_pair("dngn_statue_elephant_jade", 124 + TILE_WALL_MAX),
    _name_pair("dngn_statue_imp", 95 + TILE_WALL_MAX),
    _name_pair("dngn_statue_iron", 112 + TILE_WALL_MAX),
    _name_pair("dngn_statue_iron_golem", 125 + TILE_WALL_MAX),
    _name_pair("dngn_statue_mermaid", 88 + TILE_WALL_MAX),
    _name_pair("dngn_statue_naga", 89 + TILE_WALL_MAX),
    _name_pair("dngn_statue_snail", 85 + TILE_WALL_MAX),
    _name_pair("dngn_statue_wraith", 94 + TILE_WALL_MAX),
    _name_pair("dngn_stone_arch", 79 + TILE_WALL_MAX),
    _name_pair("dngn_stone_arch_hell", 221 + TILE_WALL_MAX),
    _name_pair("dngn_stone_stairs_down", 166 + TILE_WALL_MAX),
    _name_pair("dngn_stone_stairs_up", 167 + TILE_WALL_MAX),
    _name_pair("dngn_teleporter", 346 + TILE_WALL_MAX),
    _name_pair("dngn_teleporter_ice_cave", 118 + TILE_WALL_MAX),
    _name_pair("dngn_transit_pandemonium", 246 + TILE_WALL_MAX),
    _name_pair("dngn_trap_alarm", 138 + TILE_WALL_MAX),
    _name_pair("dngn_trap_arrow", 132 + TILE_WALL_MAX),
    _name_pair("dngn_trap_blade", 136 + TILE_WALL_MAX),
    _name_pair("dngn_trap_bolt", 134 + TILE_WALL_MAX),
    _name_pair("dngn_trap_dart", 131 + TILE_WALL_MAX),
    _name_pair("dngn_trap_golubria", 143 + TILE_WALL_MAX),
    _name_pair("dngn_trap_needle", 133 + TILE_WALL_MAX),
    _name_pair("dngn_trap_net", 137 + TILE_WALL_MAX),
    _name_pair("dngn_trap_plate", 144 + TILE_WALL_MAX),
    _name_pair("dngn_trap_shaft", 139 + TILE_WALL_MAX),
    _name_pair("dngn_trap_spear", 135 + TILE_WALL_MAX),
    _name_pair("dngn_trap_teleport", 140 + TILE_WALL_MAX),
    _name_pair("dngn_trap_teleport_permanent", 141 + TILE_WALL_MAX),
    _name_pair("dngn_trap_web", 145 + TILE_WALL_MAX),
    _name_pair("dngn_trap_web_e", 151 + TILE_WALL_MAX),
    _name_pair("dngn_trap_web_es", 155 + TILE_WALL_MAX),
    _name_pair("dngn_trap_web_esw", 163 + TILE_WALL_MAX),
    _name_pair("dngn_trap_web_ew", 159 + TILE_WALL_MAX),
    _name_pair("dngn_trap_web_n", 150 + TILE_WALL_MAX),
    _name_pair("dngn_trap_web_ne", 152 + TILE_WALL_MAX),
    _name_pair("dngn_trap_web_nes", 156 + TILE_WALL_MAX),
    _name_pair("dngn_trap_web_nesw", 164 + TILE_WALL_MAX),
    _name_pair("dngn_trap_web_new", 160 + TILE_WALL_MAX),
    _name_pair("dngn_trap_web_ns", 154 + TILE_WALL_MAX),
    _name_pair("dngn_trap_web_nsw", 162 + TILE_WALL_MAX),
    _name_pair("dngn_trap_web_nw", 158 + TILE_WALL_MAX),
    _name_pair("dngn_trap_web_s", 153 + TILE_WALL_MAX),
    _name_pair("dngn_trap_web_sw", 161 + TILE_WALL_MAX),
    _name_pair("dngn_trap_web_w", 157 + TILE_WALL_MAX),
    _name_pair("dngn_trap_zot", 142 + TILE_WALL_MAX),
    _name_pair("dngn_tree", 0 + TILE_WALL_MAX),
    _name_pair("dngn_tree_dead", 30 + TILE_WALL_MAX),
    _name_pair("dngn_tree_lightred", 24 + TILE_WALL_MAX),
    _name_pair("dngn_tree_red", 26 + TILE_WALL_MAX),
    _name_pair("dngn_tree_yellow", 21 + TILE_WALL_MAX),
    _name_pair("dngn_unknown_altar", 337 + TILE_WALL_MAX),
    _name_pair("dngn_unknown_portal", 278 + TILE_WALL_MAX),
    _name_pair("dngn_unseen_altar", 279 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_closed_down", 41 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_closed_down_crypt", 69 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_closed_middle", 40 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_closed_middle_crypt", 68 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_closed_up", 39 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_closed_up_crypt", 67 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_open_down", 48 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_open_down_crypt", 76 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_open_middle", 47 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_open_middle_crypt", 75 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_open_up", 46 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_open_up_crypt", 74 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_runed_down", 55 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_runed_middle", 54 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_runed_up", 53 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_sealed_down", 62 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_sealed_middle", 61 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_sealed_up", 60 + TILE_WALL_MAX),
    _name_pair("eldritch_overlay_ne", 496 + TILE_WALL_MAX),
    _name_pair("eldritch_overlay_nw", 495 + TILE_WALL_MAX),
    _name_pair("eldritch_overlay_se", 497 + TILE_WALL_MAX),
    _name_pair("eldritch_overlay_sw", 498 + TILE_WALL_MAX),
    _name_pair("glowing_mold", 486 + TILE_WALL_MAX),
    _name_pair("halo", 459 + TILE_WALL_MAX),
    _name_pair("halo_range", 460 + TILE_WALL_MAX),
    _name_pair("heat_aura", 473 + TILE_WALL_MAX),
    _name_pair("item_slot", 480 + TILE_WALL_MAX),
    _name_pair("kraken_overlay_ne", 492 + TILE_WALL_MAX),
    _name_pair("kraken_overlay_nw", 491 + TILE_WALL_MAX),
    _name_pair("kraken_overlay_se", 493 + TILE_WALL_MAX),
    _name_pair("kraken_overlay_sw", 494 + TILE_WALL_MAX),
    _name_pair("landing", 472 + TILE_WALL_MAX),
    _name_pair("mold", 482 + TILE_WALL_MAX),
    _name_pair("orb_glow", 465 + TILE_WALL_MAX),
    _name_pair("placeholder1", 128 + TILE_WALL_MAX),
    _name_pair("placeholder2", 129 + TILE_WALL_MAX),
    _name_pair("placeholder3", 130 + TILE_WALL_MAX),
    _name_pair("quad_glow", 467 + TILE_WALL_MAX),
    _name_pair("ray", 476 + TILE_WALL_MAX),
    _name_pair("ray_out_of_range", 477 + TILE_WALL_MAX),
    _name_pair("sanctuary", 481 + TILE_WALL_MAX),
    _name_pair("shop_armour", 178 + TILE_WALL_MAX),
    _name_pair("shop_books", 180 + TILE_WALL_MAX),
    _name_pair("shop_food", 179 + TILE_WALL_MAX),
    _name_pair("shop_gadgets", 185 + TILE_WALL_MAX),
    _name_pair("shop_general", 176 + TILE_WALL_MAX),
    _name_pair("shop_jewellery", 183 + TILE_WALL_MAX),
    _name_pair("shop_potions", 184 + TILE_WALL_MAX),
    _name_pair("shop_scrolls", 181 + TILE_WALL_MAX),
    _name_pair("shop_wands", 182 + TILE_WALL_MAX),
    _name_pair("shop_weapons", 177 + TILE_WALL_MAX),
    _name_pair("silenced", 490 + TILE_WALL_MAX),
    _name_pair("starspawn_overlay_ne", 500 + TILE_WALL_MAX),
    _name_pair("starspawn_overlay_nw", 499 + TILE_WALL_MAX),
    _name_pair("starspawn_overlay_se", 501 + TILE_WALL_MAX),
    _name_pair("starspawn_overlay_sw", 502 + TILE_WALL_MAX),
    _name_pair("travel_exclusion_bg", 478 + TILE_WALL_MAX),
    _name_pair("travel_exclusion_centre_bg", 479 + TILE_WALL_MAX),
    _name_pair("umbra", 461 + TILE_WALL_MAX),
    _name_pair("vine_overlay_ne", 504 + TILE_WALL_MAX),
    _name_pair("vine_overlay_nw", 503 + TILE_WALL_MAX),
    _name_pair("vine_overlay_se", 505 + TILE_WALL_MAX),
    _name_pair("vine_overlay_sw", 506 + TILE_WALL_MAX),
    _name_pair("wall_blood_e", 431 + TILE_WALL_MAX),
    _name_pair("wall_blood_n", 413 + TILE_WALL_MAX),
    _name_pair("wall_blood_s", 377 + TILE_WALL_MAX),
    _name_pair("wall_blood_w", 395 + TILE_WALL_MAX),
    _name_pair("wall_old_blood", 449 + TILE_WALL_MAX),
};

bool tile_feat_index(const char *str, tileidx_t *idx)
{
    ASSERT(str);
    if (!str)
        return false;

    string lc = str;
    for (unsigned int i = 0; i < lc.size(); i++)
        lc[i] = tolower(lc[i]);

    int num_pairs = sizeof(feat_name_pairs) / sizeof(feat_name_pairs[0]);
    bool result = binary_search<const char *, tileidx_t>(
       lc.c_str(), &feat_name_pairs[0], num_pairs, &strcmp, idx);
    return result;
}

bool tile_feat_equal(tileidx_t tile, tileidx_t idx)
{
    ASSERT_RANGE(tile, TILE_WALL_MAX, TILE_FEAT_MAX);
    return idx >= tile && idx < tile + tile_feat_count(tile);
}


typedef pair<tile_variation, tileidx_t> _colour_pair;

static _colour_pair feat_colour_pairs[] =
{
    _colour_pair(tile_variation(0, 0), 0),
    _colour_pair(tile_variation(0 + TILE_WALL_MAX, 4), 26 + TILE_WALL_MAX),
    _colour_pair(tile_variation(0 + TILE_WALL_MAX, 8), 30 + TILE_WALL_MAX),
    _colour_pair(tile_variation(0 + TILE_WALL_MAX, 12), 24 + TILE_WALL_MAX),
    _colour_pair(tile_variation(0 + TILE_WALL_MAX, 14), 21 + TILE_WALL_MAX),
    _colour_pair(tile_variation(344 + TILE_WALL_MAX, 15), 345 + TILE_WALL_MAX),
};

tileidx_t tile_feat_coloured(tileidx_t idx, int col)
{
    int num_pairs = sizeof(feat_colour_pairs) / sizeof(feat_colour_pairs[0]);
    tile_variation key(idx, col);
    tileidx_t found;
    bool result = binary_search<tile_variation, tileidx_t>(
       key, &feat_colour_pairs[0], num_pairs,
       &tile_variation::cmp, &found);
    return (result ? found : idx);
}

